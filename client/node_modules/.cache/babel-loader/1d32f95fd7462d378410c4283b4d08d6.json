{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\chuli\\\\Desktop\\\\Side Projects\\\\tom-hanks\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\chuli\\\\Desktop\\\\Side Projects\\\\tom-hanks\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\chuli\\\\Desktop\\\\Side Projects\\\\tom-hanks\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\chuli\\\\Desktop\\\\Side Projects\\\\tom-hanks\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\chuli\\\\Desktop\\\\Side Projects\\\\tom-hanks\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\chuli\\\\Desktop\\\\Side Projects\\\\tom-hanks\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\chuli\\\\Desktop\\\\Side Projects\\\\tom-hanks\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\chuli\\\\Desktop\\\\Side Projects\\\\tom-hanks\\\\client\\\\src\\\\components\\\\pages\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport Navbar from '../Navbar';\nimport Jumbotron from '../Jumbotron';\nimport API from '../../utils/api';\nimport ResultCard from \"../ResultCard\";\nimport SearchForm from \"../SearchForm\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      results: [],\n      title: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      API.getGoogleSearchBooks(_this.state.title).then(function (res) {\n        _this.setState({\n          results: res.data.items\n        });\n      }).catch(function (err) {\n        throw err;\n      });\n    };\n\n    _this.handleSaveBook = function (event) {\n      event.preventDefault();\n      var bookID = event.target.getAttribute('data-id'); // console.log(\"Book ID:\", bookID )\n\n      var newState = _objectSpread({}, _this.state); // console.log(this.state.results)\n\n\n      var targetBook = _this.state.results.filter(function (book) {\n        return book.id === bookID;\n      }); // Parses out book data from results by book id\n\n\n      var newBook = {\n        title: targetBook[0].volumeInfo.title,\n        authors: targetBook[0].volumeInfo.authors,\n        description: targetBook[0].volumeInfo.description,\n        image: targetBook[0].volumeInfo.imageLinks.thumbnail,\n        link: targetBook[0].volumeInfo.infoLink // Instantiates new object formatted per the db schema.\n\n      };\n\n      if (_this.state.books[bookID]) {\n        console.log(\"You've already saved that book.\");\n        return;\n      } else {\n        newState.books[bookID] = newBook; // console.log('Target:', targetBook[0])\n\n        _this.setState(newState); // Mutates state to now hold saved books in this.state.books\n\n\n        console.log('Updated this.state:', _this.state.books);\n        API.saveBook({\n          title: targetBook[0].volumeInfo.title,\n          authors: targetBook[0].volumeInfo.authors,\n          description: targetBook[0].volumeInfo.description,\n          image: targetBook[0].volumeInfo.imageLinks.thumbnail,\n          link: targetBook[0].volumeInfo.infoLink\n        }); // console.log(newState.books)\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getBooks().then(function (res) {\n        _this2.setState({\n          books: res.data\n        });\n\n        console.log('books:', _this2.state.books);\n      }).catch(function (err) {\n        throw err;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(SearchForm, {\n        handleFormSubmit: this.handleFormSubmit,\n        handleInputChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        id: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.state.results.map(function (book) {\n        return React.createElement(ResultCard, {\n          key: book.id,\n          title: book.volumeInfo.title,\n          id: book.id,\n          link: book.volumeInfo.infoLink,\n          author: book.volumeInfo.authors,\n          image: book.volumeInfo.imageLinks.thumbnail,\n          description: book.volumeInfo.description,\n          saveBook: _this3.handleSaveBook,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["C:\\Users\\chuli\\Desktop\\Side Projects\\tom-hanks\\client\\src\\components\\pages\\Home.js"],"names":["React","Component","Navbar","Jumbotron","API","ResultCard","SearchForm","Home","state","books","results","title","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","getGoogleSearchBooks","then","res","data","items","catch","err","handleSaveBook","bookID","getAttribute","newState","targetBook","filter","book","id","newBook","volumeInfo","authors","description","image","imageLinks","thumbnail","link","infoLink","console","log","saveBook","getBooks","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Navbar from '../Navbar'\r\nimport Jumbotron from '../Jumbotron'\r\nimport API from '../../utils/api'\r\nimport ResultCard from \"../ResultCard\";\r\nimport SearchForm from \"../SearchForm\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        books: [],\r\n        results: [],\r\n        title: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.getBooks()\r\n            .then(res =>  {\r\n                this.setState({ books: res.data });\r\n                console.log('books:', this.state.books)\r\n            })\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        API.getGoogleSearchBooks(this.state.title)\r\n            .then(res => {\r\n                this.setState({\r\n                    results: res.data.items\r\n                })\r\n            })\r\n            .catch(err => {\r\n                throw err\r\n            })\r\n    }\r\n    \r\n    handleSaveBook = event => {\r\n        event.preventDefault();\r\n\r\n        const bookID = event.target.getAttribute('data-id')\r\n        // console.log(\"Book ID:\", bookID )\r\n\r\n        const newState = {...this.state}\r\n        // console.log(this.state.results)\r\n\r\n        let targetBook = this.state.results.filter(book => book.id === bookID)\r\n        // Parses out book data from results by book id\r\n\r\n        const newBook = {\r\n            title: targetBook[0].volumeInfo.title,\r\n            authors: targetBook[0].volumeInfo.authors,\r\n            description: targetBook[0].volumeInfo.description,\r\n            image: targetBook[0].volumeInfo.imageLinks.thumbnail,\r\n            link: targetBook[0].volumeInfo.infoLink\r\n        }\r\n        // Instantiates new object formatted per the db schema.\r\n\r\n        if (this.state.books[bookID]) {\r\n            console.log(`You've already saved that book.`)\r\n            return\r\n\r\n        } else {\r\n            newState.books[bookID] = newBook\r\n            // console.log('Target:', targetBook[0])\r\n            \r\n            this.setState(newState)\r\n            // Mutates state to now hold saved books in this.state.books\r\n            console.log('Updated this.state:', this.state.books)\r\n\r\n            API.saveBook({\r\n                title: targetBook[0].volumeInfo.title,\r\n                authors: targetBook[0].volumeInfo.authors,\r\n                description: targetBook[0].volumeInfo.description,\r\n                image: targetBook[0].volumeInfo.imageLinks.thumbnail,\r\n                link: targetBook[0].volumeInfo.infoLink\r\n            })\r\n\r\n            // console.log(newState.books)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <Jumbotron />\r\n                <div className='container'>\r\n                    <SearchForm\r\n                    handleFormSubmit = {this.handleFormSubmit}\r\n                    handleInputChange = {this.handleInputChange} />\r\n                    <div className='container-fluid' id='main-content'>\r\n                        {this.state.results.map((book) => {\r\n                            return (\r\n                                <ResultCard\r\n                                    key={book.id}\r\n                                    title={book.volumeInfo.title}\r\n                                    id={book.id}\r\n                                    link={book.volumeInfo.infoLink}\r\n                                    author={book.volumeInfo.authors}\r\n                                    image={book.volumeInfo.imageLinks.thumbnail}\r\n                                    description={book.volumeInfo.description}\r\n                                    saveBook={this.handleSaveBook}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}